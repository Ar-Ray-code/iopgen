// ================ iopgen ===================
// Copyright (c) 2023 Ar-Ray-code
// Licensed under the Apache License, Version 2.0
// 
// - ref2md.rs
// ===========================================

use crate::cpp::structs::reference::Reference;


pub fn convert(refs: Vec<Reference>) -> String {
    let mut md_string = String::new();
    
    md_string.push_str(&"# Reference

## Subscribe

| topic_name | message type | qos_profile | callback |
| --- | --- | --- | --- |\n");
    let mut i = 0;
    for ref_ in &refs {
        if ref_.ref_type == "subscribe" {
            md_string.push_str(&"| ");
            md_string.push_str(&ref_.args.get("topic_name").unwrap());
            md_string.push_str(&" | ");
            md_string.push_str(&ref_.args.get("msg_type").unwrap());
            md_string.push_str(&" | ");
            md_string.push_str(&ref_.args.get("qos_profile").unwrap());
            md_string.push_str(&" | ");
            md_string.push_str(&ref_.args.get("callback").unwrap());
            md_string.push_str(&" |");
        }
        if i > 0 {
            md_string.push_str(&"\n");
        }
        i += 1;
    }
    md_string.push_str(&"

## Publish

| topic_name | message type | qos_profile |
| --- | --- | --- |\n");
    i = 0;
    for ref_ in &refs {
        if ref_.ref_type == "publish" {
            md_string.push_str(&"| ");
            md_string.push_str(&ref_.args.get("topic_name").unwrap());
            md_string.push_str(&" | ");
            md_string.push_str(&ref_.args.get("msg_type").unwrap());
            md_string.push_str(&" | ");
            md_string.push_str(&ref_.args.get("qos_profile").unwrap());
            md_string.push_str(&" |");
        }
        md_string.push_str(&"\n");
        if i > 0 {
            md_string.push_str(&"\n");
        }
        i += 1;
    }
    md_string.push_str(&"

## Parameter

| parameter_name | default_value |
| --- | --- |\n");

    i = 0;
    for ref_ in &refs {
        if ref_.ref_type == "parameter" {
            md_string.push_str(&"| ");
            md_string.push_str(&ref_.args.get("parameter_name").unwrap());
            md_string.push_str(&" | ");
            md_string.push_str(&ref_.args.get("default_value").unwrap());
            md_string.push_str(&" |");
        }
        if i > 0 {
            md_string.push_str(&"\n");
        }
    }
    md_string.push_str(&"

generated by iopgen
");

    md_string
}
